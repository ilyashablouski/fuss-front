---
import Image from 'astro/components/Image.astro';
import funPrimaryImg1 from '@/assets/images/tell-me-more/fun-primary-1.jpg';
import funPrimaryImg2 from '@/assets/images/tell-me-more/fun-primary-2.jpg';
import funPrimaryImg3 from '@/assets/images/tell-me-more/fun-primary-3.jpg';
import funPrimaryImg4 from '@/assets/images/tell-me-more/fun-primary-4.jpg';
import funPrimaryImg5 from '@/assets/images/tell-me-more/fun-primary-5.jpg';
import funSecondaryImg1 from '@/assets/images/tell-me-more/fun-secondary-1.jpg';
import funSecondaryImg2 from '@/assets/images/tell-me-more/fun-secondary-2.jpg';
import funSecondaryImg3 from '@/assets/images/tell-me-more/fun-secondary-3.jpg';
import funSecondaryImg4 from '@/assets/images/tell-me-more/fun-secondary-4.jpg';
import funSecondaryImg5 from '@/assets/images/tell-me-more/fun-secondary-5.jpg';

import styles from './FunSection.module.scss';

const funImages1 = [funPrimaryImg1, funPrimaryImg2, funPrimaryImg3, funPrimaryImg4, funPrimaryImg5];
const funImages2 = [
  funSecondaryImg1,
  funSecondaryImg2,
  funSecondaryImg3,
  funSecondaryImg4,
  funSecondaryImg5,
];
---

<style lang="scss">
  .fun-image-swap {
    transition: opacity 0.1s ease-in-out;
  }
</style>

<section class={styles.fun}>
  <div class={styles.fun__images}>
    {
      funImages1.map((image, index) => (
        <div class={styles.fun__image}>
          <Image
            src={image}
            class:list={[styles[`fun__image${index + 1}`], 'fun__images', 'fun-image-swap']}
            alt="friends having fun in the app"
            fetchpriority="auto"
          />
        </div>
      ))
    }
  </div>
</section>

<script define:vars={{ funImages1, funImages2 }}>
  const images = document.querySelectorAll('.fun-image-swap');

  if (images.length > 0) {
    const imageSets = [funImages1, funImages2];
    let currentSetIndex = 0;

    const delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));

    const animateImages = async () => {
      // Determine the next set of images to display
      const nextSetIndex = (currentSetIndex + 1) % imageSets.length;
      const nextImageSources = imageSets[nextSetIndex];

      // Animate each image one by one
      for (let i = 0; i < images.length; i++) {
        const image = images[i];
        const nextSrc = nextImageSources[i]?.src;

        if (image && nextSrc) {
          image.style.opacity = '0';
          await delay(100); // Wait for fade-out
          image.src = nextSrc;
          image.style.opacity = '1';
          await delay(100); // Pause between images
        }
      }

      currentSetIndex = nextSetIndex;

      // Wait before starting the next cycle
      await delay(2000);

      // Loop the animation
      animateImages();
    };

    // Start the animation loop once the page is fully loaded
    window.addEventListener('load', animateImages);
  }
</script>
