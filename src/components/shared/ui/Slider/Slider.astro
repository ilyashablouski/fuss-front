---
import Image from 'astro/components/Image.astro';
import type { ImageMetadata } from 'astro';

interface Props {
  slides: ImageMetadata[];
  class?: string;
}

const { slides, class: className } = Astro.props;
---

<style lang="scss">
  .slider {
    --slider-end-offset: calc(-100% + 169.5px);

    display: flex;
    gap: 16px;

    @include media-max($lg) {
      --slider-end-offset: calc(-100% + 145px);
      gap: 10px;
    }

    @include media-max($md) {
      --slider-end-offset: calc(-100% + 110px);
    }

    &.start-animation {
      animation: scroll 15s ease-out forwards;
    }

    &__item {
      width: 169.5px;
      display: inline-flex;

      @include media-max($lg) {
        width: 145px;
      }

      @include media-max($md) {
        width: 110px;
      }

      img {
        width: 100%;
        height: 100%;
        border-radius: $border-radius-img;
      }
    }

    @keyframes scroll {
      0% {
        transform: translateX(0);
      }
      100% {
        transform: translateX(var(--slider-end-offset));
      }
    }
  }
</style>

<div class:list={['slider', className]}>
  {
    slides.map((slide, index) => (
      <div class="slider__item">
        <Image
          src={slide}
          alt={`Cool place ${index + 1} in London shown in the app image`}
          fetchpriority="high"
        />
      </div>
    ))
  }
</div>

<script>
  const slider = document.querySelector('.slider');

  if (slider) {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            slider.classList.add('start-animation');
            observer.unobserve(slider);
          }
        });
      },
      {
        threshold: 0.01,
      },
    );

    observer.observe(slider);
  }
</script>
